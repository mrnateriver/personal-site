---
import { normalizeColor, type Color } from '../colors';
import { normalizeCssValue } from '../styles';
export interface Props {
  class?: string;
  href: string;
  borderWidth?: string | number;
  borderSize?: string | number;
  borderOffset?: string | number;
  borderColor?: Color;
}

const { class: className, href, borderWidth = 2, borderSize = 32, borderOffset = 16, borderColor } = Astro.props;
---

<a class={className} href={href}>
  <slot />
</a>

<style
  lang="scss"
  define:vars={{
    'border-width': normalizeCssValue(borderWidth, 'px'),
    'border-size': normalizeCssValue(borderSize, 'px'),
    'border-offset': normalizeCssValue(borderOffset, 'px'),
    'border-color': normalizeColor(borderColor),
  }}
>
  @keyframes selection-grow {
    0% {
      border-width: var(--border-width);
      height: 0;
      width: 0;
    }
    50% {
      border-width: var(--border-width);
      width: var(--border-size);
      height: 0;
    }
    100% {
      border-width: var(--border-width);
      width: var(--border-size);
      height: var(--border-size);
    }
  }

  a {
    -webkit-tap-highlight-color: transparent;
    transform-style: preserve-3d;
    display: inline-block;
    position: relative;
    outline: none;

    &::before,
    &::after {
      content: '';
      display: block;
      position: absolute;
      transition: all 300ms ease-in-out;
      height: 0;
      width: 0;
    }

    &::before {
      bottom: calc(-1 * var(--border-offset));
      left: calc(-1 * var(--border-offset));
      border-left-color: var(--border-color, var(--color-text-anchor));
      border-bottom-color: var(--border-color, var(--color-text-anchor));
    }
    &::after {
      right: calc(-1 * var(--border-offset));
      top: calc(-1 * var(--border-offset));
      border-right-color: var(--border-color, var(--color-text-anchor));
      border-top-color: var(--border-color, var(--color-text-anchor));
    }

    &:visited {
      &::before {
        border-left-color: var(--border-color, var(--color-text-anchor-visited));
        border-bottom-color: var(--border-color, var(--color-text-anchor-visited));
      }
      &::after {
        border-right-color: var(--border-color, var(--color-text-anchor-visited));
        border-top-color: var(--border-color, var(--color-text-anchor-visited));
      }
    }

    &:hover,
    &:focus-within {
      &::before {
        border-left-style: solid;
        border-bottom-style: solid;
      }
      &::after {
        border-top-style: solid;
        border-right-style: solid;
      }

      &::before,
      &::after {
        animation: selection-grow 200ms forwards ease-in-out;
      }
    }
  }
</style>
