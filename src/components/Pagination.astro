---
import Win98Button from './Win98Button.astro';
import Win98Window from './Win98Window.astro';

export interface Props {
  class?: string;
  maxPagesToShow?: number;
  totalPages: number;
  currentPage: number;
  pageHrefTemplate: `${string}[page]${string}`;
  firstPageHref?: string;
}

const { class: className, totalPages, currentPage, pageHrefTemplate, maxPagesToShow = 5, firstPageHref } = Astro.props;

function generateUrl(page: number): { page: number; url: string } {
  return {
    page,
    url: firstPageHref && page === 1 ? firstPageHref : pageHrefTemplate.replace('[page]', page.toString()),
  };
}

const urls: Array<{ page: number; url: string } | null> = [];

let startPage = Math.max(1, currentPage + (maxPagesToShow % 2 === 0 ? 1 : 0) - Math.floor(maxPagesToShow / 2));
const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
const overflow = startPage + maxPagesToShow - 1 - totalPages;
if (overflow > 0) {
  startPage = Math.max(1, startPage - overflow);
}

if (startPage > 1) {
  urls.push(generateUrl(1));
}
if (startPage > 2) {
  urls.push(null);
}

for (let page = startPage; page <= endPage; page++) {
  urls.push(generateUrl(page));
}

if (endPage < totalPages - 1) {
  urls.push(null);
}
if (endPage < totalPages) {
  urls.push(generateUrl(totalPages));
}
---

<Win98Window class:list={['pagination', className]} caption="Pagination" as="footer">
  {
    urls.map((url) =>
      url ? (
        <Win98Button
          class:list={['pagination-button', url.page === currentPage && 'pagination-button-current']}
          as="a"
          href={url.url}
          title={`Navigate to page ${url.page}`}
          aria-label={`Navigate to page ${url.page}`}
        >
          {url.page}
        </Win98Button>
      ) : (
        <Win98Button class="pagination-button pagination-button-gap" disabled aria-hidden="true">
          ...
        </Win98Button>
      ),
    )
  }
</Win98Window>

<style lang="scss">
  .pagination {
    --pagination-button-size: 22px;

    &-button {
      min-width: var(--pagination-button-size);
      padding: 0;

      &-current {
        font-weight: bold;
      }

      &-gap {
      }
    }
  }
</style>
