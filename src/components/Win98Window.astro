---
import type { JSX } from 'astro/jsx-runtime';
import Win98Button from './Win98Button.astro';

export type Props<AsElem extends keyof JSX.IntrinsicElements = 'div'> = JSX.IntrinsicElements[AsElem] & {
  caption?: string;
  fullWindowControls?: boolean;
  closeButtonHref?: string;
  canvasBackground?: boolean;
  iconSrc?: string;
  statusFields?: string[];
  inactive?: boolean;
  as?: AsElem;
};

const {
  class: className,
  caption,
  fullWindowControls = false,
  canvasBackground = false,
  closeButtonHref,
  iconSrc,
  statusFields,
  inactive,
  as: Container = 'div',
  title,
  ...htmlProps
} = Astro.props;
---

<Container class:list={['win98-window', inactive ? 'win98-window-inactive' : '', className]} {...htmlProps}>
  {
    caption && (
      <div class="win98-window-caption" title={title ?? caption}>
        {iconSrc && <img class="win98-window-caption-icon" src={iconSrc} alt="" aria-hidden="true" />}
        <span class="win98-window-caption-label" role="heading">
          {caption}
        </span>

        {fullWindowControls && <Win98Button class="win98-window-caption-button win98-window-caption-button-minimize" />}
        {fullWindowControls && <Win98Button class="win98-window-caption-button win98-window-caption-button-expand" />}
        {closeButtonHref && (
          <Win98Button
            as="a"
            href={closeButtonHref}
            class="win98-window-caption-button win98-window-caption-button-close"
          />
        )}
        {!closeButtonHref && <Win98Button class="win98-window-caption-button win98-window-caption-button-close" />}
      </div>
    )
  }
  <div class={`win98-window-content ${canvasBackground ? 'win98-window-content-white' : ''}`}>
    <slot />
  </div>

  <slot name="footer" />
  {
    !!statusFields?.length && (
      <div class="win98-window-status-bar">
        {statusFields.map((field) => (
          <div class="win98-window-status-bar-field">{field}</div>
        ))}
      </div>
    )
  }
</Container>

<style lang="scss">
  @use '../styles/win98' as win98;

  .win98-window {
    --win98-caption-icon-size: 11px;

    -webkit-font-smoothing: none;
    display: flex;
    flex-flow: column nowrap;
    line-height: 1;
    box-sizing: border-box;
    font-family: var(--font-family-win98);
    font-size: var(--win98-element-font-size);
    box-shadow: var(--win98-border-window-outer), var(--win98-border-window-inner);
    background: var(--win98-surface);
    padding: var(--padding-xss);

    $self: &;
    &-inactive {
      #{$self}-caption {
        background: linear-gradient(90deg, var(--dialog-gray), var(--dialog-gray-light));
      }
    }

    &-caption {
      background: linear-gradient(90deg, var(--win98-dialog-blue), var(--win98-dialog-blue-light));
      padding: calc(var(--padding-xs) - 1px);
      padding-left: var(--padding-sm);
      padding-right: var(--padding-xss);
      display: flex;
      justify-content: flex-start;
      align-items: center;

      &-icon {
        width: var(--win98-caption-icon-size);
        height: var(--win98-caption-icon-size);
        margin-right: var(--padding-xs);
      }

      &-label {
        font-weight: bold;
        letter-spacing: 0;
        margin-right: var(--padding-xlg);
        color: white;
        flex: 1;
      }

      &-button {
        @include win98.light();

        display: block;
        min-width: 16px;
        min-height: 14px;
        padding: 0;
        background: var(--win98-surface-light);

        &:active {
          padding: 0;
        }
        &:focus {
          outline: none;
        }

        &-minimize {
          background-image: url('../assets/win98-window-button-icon-minimize.svg');
          background-repeat: no-repeat;
          background-position: bottom 3px left 4px;
        }
        &-expand {
          background-image: url('../assets/win98-window-button-icon-maximize.svg');
          background-repeat: no-repeat;
          background-position: top 2px left 3px;
        }
        &-close {
          margin-left: var(--padding-xss);
          background-image: url('../assets/win98-window-button-icon-close.svg');
          background-repeat: no-repeat;
          background-position: top 3px left 4px;
        }
      }
    }

    &-content {
      padding: var(--padding-md);
      position: relative;
      overflow: hidden;
      flex: 1;

      &-white {
        box-sizing: border-box;
        border: 2px groove transparent;
        border-image: url('../assets/win98-sunken-panel-border.svg') 2;
        background: var(--win98-button-highlight);
        margin: var(--padding-xss);
        padding: var(--padding-sm);
        overflow: auto;

        @media (prefers-color-scheme: dark) {
          background: var(--win98-window-frame);
          border-width: 1px;
          border-style: solid;
          border-top-color: var(--win98-button-shadow);
          border-left-color: var(--win98-button-shadow);
          border-bottom-color: var(--win98-button-face);
          border-right-color: var(--win98-button-face);
          border-image: none;
        }
      }

      @include win98.scrollbars();
    }

    &-status-bar {
      margin: 0px 1px;
      display: flex;
      gap: 1px;

      &-field {
        line-height: 1.5;
        flex-grow: 1;
        box-shadow: var(--win98-border-status-field);
        padding: var(--padding-xss) var(--padding-xs);
        margin: 0;
      }
    }
  }
</style>
