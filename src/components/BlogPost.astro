---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

import { calculateReadTime, countCodeBlocks, countImages, countWords } from '../utils';

import Win98Button from './Win98Button.astro';
import Win98Window from './Win98Window.astro';

export interface Props {
  class?: string;
  title: string;
  summary?: string;
  date: Date;
  href: string;
  image?: ImageMetadata;
  tags?: string[];
  summaryAiGenerated?: boolean;
  body?: string;
}

const {
  class: className,
  title,
  summary,
  date,
  href,
  image,
  tags = [],
  summaryAiGenerated: isSummaryAiGenerated = false,
  body = '',
} = Astro.props;

const caption = tags.length > 0 ? tags.join(', ') : 'Article';

const formattedDate = date.toLocaleString();
const humanDate = date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });

const readTimeMinutes = calculateReadTime(body);
const wordCount = countWords(body);
const codeBlocksCount = countCodeBlocks(body);
const imagesCount = countImages(body);

const readTimeField = typeof readTimeMinutes === 'number' ? `Read time: ${readTimeMinutes} min` : '';
const wordCountField = typeof wordCount === 'number' ? `Words: ${wordCount}` : '';
const codeBlocksCountField = typeof codeBlocksCount === 'number' ? `Code blocks: ${codeBlocksCount}` : '';
const imagesCountField = typeof imagesCount === 'number' ? `Images: ${imagesCount}` : '';
---

<Win98Window
  class:list={['blog-post', className]}
  as="article"
  caption={`${caption} - ${humanDate}`}
  title={`${caption} - ${formattedDate}`}
  statusFields={[readTimeField, wordCountField, codeBlocksCountField, imagesCountField].filter(Boolean)}
  canvasBackground
>
  <div class="blog-post-layout">
    <div class="blog-post-content">
      <h2 class:list={['blog-post-title', image && 'blog-post-title-image']}>{title}</h2>
      {
        summary && (
          <p class="blog-post-content-summary">
            {summary}
            {isSummaryAiGenerated && <span class="blog-post-content-ai-disclaimer">-- summary generated by AI</span>}
          </p>
        )
      }
      <div class="blog-post-footer">
        <Win98Button class="blog-post-footer-button" as="a" href={href}> Read more </Win98Button>
      </div>
    </div>

    {image && <Image src={image} alt={title} class="blog-post-image" />}
  </div>
</Win98Window>

<style lang="scss">
  .blog-post {
    &-layout {
      display: flex;
      gap: var(--padding-lg);
    }

    &-image {
      --image-size: 200px;

      display: block;
      height: var(--image-size);
      width: var(--image-size);
      object-fit: cover;
    }

    @media screen and (max-width: 580px) {
      .blog-post-layout {
        flex-direction: column;
      }

      .blog-post-content {
        order: 1;
      }

      .blog-post-image {
        --image-size: auto;
        width: 100%;
        order: 0;
      }
    }

    &-title {
      -webkit-font-smoothing: initial;
      font-family: var(--font-family-content);
      margin: var(--padding-sm) 0 var(--padding-lg) 0;
      font-size: 1.5rem;

      &-image {
        margin-top: 0;
      }
    }

    &-content {
      flex: 1;
      -webkit-font-smoothing: initial;
      font-family: var(--font-family-content);

      &-summary {
        font-size: var(--font-size-sm);
        padding-top: var(--padding-xs);
      }

      &-ai-disclaimer {
        font-size: var(--font-size-xs);
        color: var(--color-text-secondary);
      }
    }

    &-footer {
      margin-top: var(--padding-lg);
      gap: var(--padding-sm);
    }
  }
</style>
