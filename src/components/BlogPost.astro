---
import Win98Button from './Win98Button.astro';
import Win98Window from './Win98Window.astro';

export interface Props {
  title: string;
  summary: string;
  date: Date;
  href: string;
  imageSrc?: string;
  tags?: string[];
  summaryAiGenerated?: boolean;
}

const {
  title,
  summary,
  date,
  href,
  imageSrc,
  tags = [],
  summaryAiGenerated: isSummaryAiGenerated = false,
} = Astro.props;

const caption = tags.length > 0 ? `${tags.join(', ')}` : 'Article';

const formattedDate = date.toISOString();
const humanDate = date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });

const aiIconSize = '16px';

const readTime = 'Read time: 29 minutes'; // TODO: implement calculation or move to props
const wordCount = 'Words: 1234'; // TODO: implement calculation or move to props
const codeBlocksCount = 'Code blocks: 5'; // TODO: implement calculation or move to props
const imagesCount = 'Images: 1'; // TODO: implement calculation or move to props
---

<Win98Window
  class="blog-post"
  as="article"
  caption={`${caption} - ${humanDate}`}
  statusFields={[readTime, wordCount, codeBlocksCount, imagesCount]}
  canvasBackground
>
  {imageSrc && <img src={imageSrc} alt={title} class="blog-post-image" />}

  <h2 class="blog-post-title">{title}</h2>

  <div class="blog-post-content">
    <p class="blog-post-content-summary">
      {summary}
      {isSummaryAiGenerated && <span class="blog-post-content-ai-disclaimer">-- summary generated by AI</span>}
    </p>
  </div>

  <div class="blog-post-footer">
    <Win98Button class="blog-post-footer-button" as="a" href={href}>Read more</Win98Button>
  </div>
</Win98Window>

<style lang="scss">
  .blog-post {
    &-image {
      margin-bottom: var(--padding-lg);
      max-height: 200px;
      width: 100%;
      object-fit: cover;
    }

    &-title {
      -webkit-font-smoothing: initial;
      font-family: var(--font-family-content);
      font-size: 2rem;
      margin: var(--padding-sm) 0 var(--padding-lg) 0;
    }

    &-content {
      -webkit-font-smoothing: initial;
      font-family: var(--font-family-content);
      display: flex;
      align-items: flex-start;
      justify-content: flex-start;
      gap: var(--padding-lg);

      &-summary {
        font-size: var(--font-size-sm);
        padding-top: var(--padding-xs);
      }

      &-ai-disclaimer {
        font-size: var(--font-size-xs);
        color: var(--color-text-secondary);
      }
    }

    &-footer {
      margin-top: var(--padding-lg);
      gap: var(--padding-sm);
    }
  }
</style>
