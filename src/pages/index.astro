---
// import Acknowledgments from '../components/Acknowledgments.astro';
import BoxImage from '../components/BoxImage.astro';
import SectionLink from '../components/SectionLink.astro';
import IndexLayout from '../layouts/Layout.astro';

const hideSurfacesLabels = { right: true, back: true, bottom: true };
const hideSurfacesShadows = { right: true, left: true, back: true, bottom: true, top: true };

const labelsColor = 'var(--color-text-anchor)';
const labelsColorShadow = 'var(--labels-shadow-color)';

const commonLabelsProps = {
  cellSize: 'var(--labels-size)',
  gap: 0,
};
---

<IndexLayout title="Hi mom">
  <main>
    <section class="labels-container">
      <!-- TODO: accessibility for boximages -->
      <h1>
        <BoxImage
          imagePath="src/assets/label_author.bmp"
          hideSurfaces={hideSurfacesShadows}
          cellsColor={labelsColorShadow}
          hideGradient={true}
          {...commonLabelsProps}
        />
      </h1>

      <div class="labels-links">
        <div class="labels-shadows">
          <BoxImage
            imagePath="src/assets/label_blog.bmp"
            hideSurfaces={hideSurfacesShadows}
            cellsColor={labelsColorShadow}
            hideGradient={true}
            {...commonLabelsProps}
          />
          <BoxImage
            imagePath="src/assets/label_resume.bmp"
            hideSurfaces={hideSurfacesShadows}
            cellsColor={labelsColorShadow}
            hideGradient={true}
            {...commonLabelsProps}
          />
        </div>

        <SectionLink
          class="labels-blog"
          href="https://google.com"
          borderWidth="var(--padding-md)"
          borderOffset="var(--padding-xlg)"
          borderSize="calc(4 * var(--padding-lg))"
        >
          <BoxImage
            imagePath="src/assets/label_blog.bmp"
            hideSurfaces={hideSurfacesLabels}
            cellsColor={labelsColor}
            {...commonLabelsProps}
          />
        </SectionLink>

        <SectionLink
          class="labels-resume"
          href="https://google.com"
          borderWidth="var(--padding-md)"
          borderOffset="var(--padding-xlg)"
          borderSize="calc(4 * var(--padding-lg))"
        >
          <BoxImage
            imagePath="src/assets/label_resume.bmp"
            hideSurfaces={hideSurfacesLabels}
            cellsColor={labelsColor}
            {...commonLabelsProps}
          />
        </SectionLink>
      </div>
    </section>
  </main>
</IndexLayout>

<script src="./index-interactive.ts"></script>

<style lang="scss" is:global>
  html,
  body {
    overflow: hidden;
    background: var(--color-surface);
  }
</style>

<style lang="scss">
  @use 'sass:list';

  main {
    height: 100%;
    display: grid;
    place-items: center;
    transform-style: preserve-3d;
    transform-origin: center;
    animation: 2s forwards main-rotation cubic-bezier(0.65, 0.05, 0.36, 1); // TODO: possibly a single common curve

    --animation-end-offset-y: calc(-50vh + 20vw);

    @media (max-width: 460px) or (max-height: 520px) {
      --animation-end-offset-y: calc(-50vh + 30vw);
    }

    @keyframes main-rotation {
      0% {
        transform: rotateX(0deg) rotateY(0deg) translateZ(0vw) translateY(-40vh);
      }
      100% {
        transform: rotateX(-20deg) rotateY(30deg) translateZ(-40vw) translateY(var(--animation-end-offset-y))
          translateX(20vw);
      }
    }

    // @keyframes image-rocking {
    //   $pos: [[0, 0], [1, 0], [-1, 1], [1, -1], [1, 1], [-1, -1], [-1, 0], [1, 0], [0, 0]];
    //   @for $i from 0 through 8 {
    //     #{$i * 12.5%} {
    //       $x: list.nth(list.nth($pos, $i + 1), 1);
    //       $y: list.nth(list.nth($pos, $i + 1), 2);
    //       transform: translate(calc($x * var(--rocking-offset)), calc($y * var(--rocking-offset)));
    //     }
    //   }
    // }

    &::before,
    &::after {
      content: '';
      position: absolute;
      height: 200vh;
      width: 200vw;
      left: -50vw;
      top: -100vh;
    }

    &::before {
      background: var(--color-surface);
    }

    &::after {
      transform-origin: center bottom;
      transform: rotateY(180deg) rotateX(90deg);
      background: linear-gradient(var(--color-surface), var(--color-surface) 90%, var(--color-background));
    }

    .labels {
      &-container {
        transform-style: preserve-3d;
        transform: translateZ(8px) translateY(calc(50vh - 50% - var(--padding-xlg) - var(--padding-sm)));

        --labels-size: 16px;
        --labels-offset: 100px;
        --labels-shadow-color: rgba(0, 0, 0, 0.1);

        @media (prefers-color-scheme: dark) {
          --labels-shadow-color: rgba(255, 255, 255, 0.1);
        }

        @media (max-width: 768px) or (max-height: 600px) {
          --labels-size: 12px;
          --labels-offset: 50px;
        }
        @media (max-width: 460px) or (max-height: 460px) {
          --labels-size: 10px;
          --labels-offset: 0px;
        }
        @media (max-width: 280px) {
          --labels-size: 8px;
          --labels-offset: 0px;
        }

        h1 {
          margin-bottom: var(--padding-lg);
        }
      }

      &-shadows,
      &-links {
        display: flex;
        flex-flow: column;
        align-items: flex-start;
        transform-style: preserve-3d;
        position: relative;
        gap: var(--padding-lg);
      }

      &-shadows {
        position: absolute;
      }

      &-blog {
        transform: translateZ(var(--labels-offset));
      }

      &-resume {
        transform: translateZ(calc(2 * var(--labels-offset)));
      }
    }
  }

  // .walls-container {
  //   transform-style: preserve-3d;

  //   &::before,
  //   &::after {
  //     content: '';
  //     background: linear-gradient(rgba(0, 0, 0, 0.5), white);
  //     position: absolute;
  //     height: 100vh;
  //     width: 100vw;
  //   }

  //   &::before {
  //     transform-origin: center bottom;
  //   }
  //   &::after {
  //     transform-origin: center top;
  //     transform: rotateX(-90deg) translateY(100%);
  //   }
  // }

  // .image {
  //   &-container {
  //     --rocking-offset: 10px;

  //     display: inline-block;
  //     position: relative;
  //     overflow: visible;
  //     transform-style: preserve-3d;

  //     // FIXME: TEMP!
  //     perspective: 1000000px;
  //     perspective-origin: 300px 300px;
  //     // transform: rotateX(-16deg) rotateY(32deg) rotateZ(0deg);
  //     transform-origin: center center;
  //     // animation: 2s image-rotation forwards ease-in-out;
  //     // animation: image-rotation 2s forwards ease-in-out; // , tilt-n-move-shaking 20s infinite ease-in-out;
  //     // animation: shift-perspective 10s forwards ease-in-out;
  //     // transition: transform 1s ease-in-out;
  //   }

  //   &-acks {
  //     position: absolute;
  //   }

  //   &-kangaroo {
  //     animation: image-rocking 20s infinite cubic-bezier(0.65, 0.05, 0.36, 1);
  //   }
  // }

  // .image-acks {
  //   margin-top: 32px; // TODO: magic constant
  // }
</style>
